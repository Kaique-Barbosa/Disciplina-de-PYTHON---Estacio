Question√°rio:

üìå Parte 1 ‚Äì Paradigmas de Linguagem de Programa√ß√£o (4 quest√µes)

Explique o que s√£o paradigmas de programa√ß√£o. Quais s√£o os principais paradigmas existentes? D√™ exemplos de linguagens que se encaixam em cada um.

Compare os paradigmas imperativo e declarativo, destacando suas principais caracter√≠sticas, vantagens e desvantagens.

Como o paradigma orientado a objetos se diferencia do estruturado? D√™ exemplos de como uma mesma tarefa pode ser abordada nos dois paradigmas.
    Resposta= O codigo fica mais limpo pois os codigos est√£o separados em classes, o reaproveitamento de codigo √© bem relevante em compara√ß√£o √† estruturada
Python √© considerada uma linguagem multiparadigma. O que isso significa na pr√°tica para o desenvolvedor? D√™ exemplos de como diferentes paradigmas podem ser usados em Python.
    Resposta= Quando se √© possivel mesclar as formas de desenvolvimento, usando processos procedurais e orientado a objetos em conjunto.

üìå Parte 2 ‚Äì Python B√°sico (4 quest√µes)

Explique como funciona o gerenciamento de vari√°veis em Python. Quais s√£o as regras para nomear vari√°veis? D√™ exemplos v√°lidos e inv√°lidos.
    Resposta= 
Qual a import√¢ncia da indenta√ß√£o em Python? O que pode acontecer se o c√≥digo estiver mal indentado? Explique com um exemplo.
    Resposta= Python interpreta os blocos (escopo) de codigo atrav√©s da identa√ß√£o, diferentemente de Js por exemplo que utilisa fun√ß√µes entre {} para definir onde come√ßa e onde termina o codigo.
Descreva a diferen√ßa entre os tipos de dados primitivos int, float, bool e str em Python. D√™ exemplos de quando usar cada um.
    Resposta= int e float s√£o para numeros, um podendo ter ponto flutuante (dacimais). bool √© usado para verificar se √© verdadeiro ou falso, e str para textos.
Explique como funcionam as estruturas condicionais em Python. Escreva um exemplo usando if, elif e else, e explique seu funcionamento.
    Resposta=   if, usado para quando se atende uma condi√ß√£o √© executado um bloco de c√≥digo
                elif consdi√ß√£o de exce√ß√£o, onde o fluxo desviado deve atender a uma condi√ß√£o.
                else √© somente uma ex√ß√£o, onde o fluxo cair√° por pad√£o se as condi√ß√µes antes dele n√£o forem atendidas

üìå Parte 3 ‚Äì Python Estruturado (3 quest√µes)

O que caracteriza um programa estruturado? Como esse paradigma √© aplicado no desenvolvimento em Python?
Resposta= Programa esse onde deve seguir uma sequencia de passos (fluxo) como se √© esperado.
Explique o uso de fun√ß√µes em Python dentro do paradigma estruturado. Quais s√£o os benef√≠cios de modularizar um programa com fun√ß√µes?
    Resposta= 
Compare a abordagem estruturada com a orientada a objetos na resolu√ß√£o de um problema simples, como o c√°lculo de m√©dia de alunos. Quais seriam as diferen√ßas de implementa√ß√£o?

üìå Parte 4 ‚Äì Python POO (Programa√ß√£o Orientada a Objetos) (4 quest√µes)

Explique os quatro pilares da Programa√ß√£o Orientada a Objetos: abstra√ß√£o, encapsulamento, heran√ßa e polimorfismo. D√™ exemplos simples de cada um em Python.

Qual a diferen√ßa entre classes e objetos em Python? Escreva um exemplo de uma classe Carro e instancie dois objetos a partir dela.

Como funciona o m√©todo __init__ em Python? Qual sua fun√ß√£o dentro de uma classe? Explique com um exemplo.

Explique como funciona a heran√ßa em Python. Crie um exemplo com uma classe base Animal e duas classes filhas Cachorro e Gato. Mostre como m√©todos e atributos podem ser reutilizados.